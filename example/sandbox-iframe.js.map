{"version":3,"file":"sandbox-iframe.js","sources":["../../proxy-toolkit/src/proxy-toolkit.ts","../../rpc-mini/src/rpc-mini.ts","../../sandbox-worklet/src/sandbox-node.ts","../../sandbox-worklet/src/sandbox-iframe.ts"],"sourcesContent":["export type GetterReturn<T> = { [K: string]: T }\n\n/**\n * Creates a proxy that calls `cb` for every property accessed and returns its result.\n *\n * @param cb Called with the key of the property being accessed.\n */\nexport const Getter = <T>(cb: (key: string) => T, target: any = {}): GetterReturn<T> =>\n  new Proxy(target, { get: (_, key: string) => cb(key) })\n\nexport type FluentCapture = (readonly ['get', string | symbol] | readonly ['apply', any[]])[] & { origin: Error }\n\nexport const FluentCaptureSymbol = Symbol()\n\nexport interface FluentCaptureHandler {\n  callMethod(name: string, args: unknown[], ops: FluentCapture): unknown\n}\n\nexport function FluentCapture(handler?: FluentCaptureHandler) {\n  const fn = () => { }\n  const results: FluentCapture = Object.assign([], { origin: new Error() })\n  const proxy: any = new Proxy(fn, {\n    get: (_, key, receiver) => {\n      if (key === FluentCaptureSymbol)\n        return true\n      if (key === '_results')\n        return results\n      if (key === 'ops') {\n        return results\n      }\n      results.push(['get', key] as const)\n      return receiver\n    },\n    apply: (_, __, args: any[]) => {\n      const op = ['apply', args] as const\n      results.push(op)\n\n      // if passed a callMethod interceptor and it returns\n      // something, return that and not the proxy instead.\n      const result = handler?.callMethod(\n        results.at(-2)![1] as string,\n        args,\n        results\n      )\n\n      if (result != null) {\n        return result\n      }\n\n      return proxy\n    },\n  })\n  return proxy\n}\n\nexport const applyFluentCapture = (capture: FluentCapture, target: any) => {\n  let res = target\n  for (const [op, args] of capture) {\n    if (op === 'get') {\n      res = res[args]\n    } else if (op === 'apply') {\n      res = res(...args)\n    }\n  }\n  return res\n}\n","import { Ctor } from 'everyday-types'\nimport { Getter } from 'proxy-toolkit'\n\nexport type Rpc = (method: string, ...args: any[]) => any\n\nconst defaultTransferables: Ctor[] = [\n  typeof OffscreenCanvas !== 'undefined' ? OffscreenCanvas : void 0\n].filter(Boolean) as Ctor[]\n\nexport const rpc = <T = any>(port: MessagePort, api: Record<string, (...args: any[]) => Promise<any>> = {}, transferables: Ctor[] = defaultTransferables) => {\n\n  const xfer = (args: any[], transferables: Ctor[]) => args.reduce((p, n) => {\n    if (typeof n === 'object') {\n      for (const key in n) {\n        if (\n          n[key] &&\n          transferables.some((ctor) =>\n            n[key] instanceof ctor)\n        ) {\n          p.push(n[key])\n        }\n      }\n    }\n    return p\n  }, [] as Transferable[])\n\n  let callbackId = 0\n  const calls = new Map<number, { resolve: (result: any) => void; reject: (error: Error) => void }>()\n\n  port.onmessage = async ({ data }) => {\n    const { cid } = data\n\n    if (data.method) {\n      let result: any\n      try {\n        result = await api[data.method](...data.args)\n        port.postMessage({ cid, result }, xfer([result], transferables))\n      } catch (error) {\n        port.postMessage({ cid, error })\n      }\n    } else {\n      if (!calls.has(cid)) {\n        throw new ReferenceError('Callback id not found: ' + cid)\n      }\n\n      const { resolve, reject } = calls.get(cid)!\n      calls.delete(data.cid)\n\n      if (data.error) reject(data.error)\n      else resolve(data.result)\n    }\n  }\n\n  const call = (method: string, ...args: any[]) => {\n    const cid = callbackId++\n\n    const promise = new Promise<MessageEvent<any>>((resolve, reject) => {\n      calls.set(cid, { resolve, reject })\n    })\n\n    port.postMessage(\n      { method, args, cid },\n      xfer(args, transferables)\n    )\n\n    return promise\n  }\n\n  const getter = Getter(key => call.bind(null, key), call) as unknown as Rpc & T\n\n  return getter\n}\n","import { Rpc, rpc } from 'rpc-mini'\n\nexport class SandboxNode extends AudioWorkletNode {\n  private static hasRegistered = false\n\n  static async register(context: BaseAudioContext) {\n    if (this.hasRegistered) return\n    // @ts-ignore\n    await context.audioWorklet.addModule(new URL('./sandbox-processor.js', import.meta.url).href)\n    this.hasRegistered = true\n  }\n\n  static async create(context: BaseAudioContext) {\n    await this.register(context)\n    return new this(context)\n  }\n\n  rpc: Rpc\n\n  constructor(context: BaseAudioContext) {\n    super(context, 'sandbox')\n    this.rpc = rpc(this.port)\n  }\n\n  eval(code: string) {\n    return this.rpc('eval', code)\n  }\n}\n","import { SandboxNode } from './sandbox-node'\n\nself.onmessage = async e => {\n  self.onmessage = null\n\n  const [port2] = e.ports\n\n  const ctx = new OfflineAudioContext({ length: 1, sampleRate: 3000 })\n  const node = await SandboxNode.create(ctx)\n\n  node.port.onmessage = ({ data }) => port2.postMessage(data)\n  port2.onmessage = ({ data }) => node.port.postMessage(data)\n}\n"],"names":["Getter","cb","target","Proxy","get","_","key","defaultTransferables","OffscreenCanvas","filter","Boolean","rpc","port","api","transferables","xfer","args","reduce","p","n","some","ctor","push","callbackId","calls","Map","onmessage","data","cid","method","result","postMessage","error","has","ReferenceError","resolve","reject","delete","call","promise","Promise","set","getter","bind","addModule","constructor","self","e","port2","ports","ctx","OfflineAudioContext","length","sampleRate","node","SandboxNode","create"],"mappings":"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"}